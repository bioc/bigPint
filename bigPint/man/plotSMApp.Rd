% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotSMApp.R
\name{plotSMApp}
\alias{plotSMApp}
\title{Plot interactive scatterplot matrices}
\usage{
plotSMApp(data = data, dataSE = NULL, xbins = 10)
}
\arguments{
\item{data}{DATA FRAME | Read counts}

\item{dataSE}{SUMMARIZEDEXPERIMENT | Summarized experiment format that
can be used in lieu of data; default NULL}

\item{xbins}{INTEGER | Number of bins partitioning the range of the plot; 
default 10}
}
\value{
A Shiny application that shows a scatterplot matrix with hexagon
bins and allows users to click on hexagon bins to determine how many genes
they each contain. The user can download a file that contains the gene IDs
that are located in the clicked hexagon bin.
}
\description{
Plot interactive scatterplot matrices.
}
\examples{
# The first example uses data and dataMetrics objects as
# input. The last example creates the same plots now using the
# SummarizedExperiment (i.e. dataSE) object input.

# Example: Create interactive scatterplot matrix for first two treatment
# groups of data.

data(soybean_cn_sub)
soybean_cn_sub <- soybean_cn_sub[,1:7]
app <- plotSMApp(data=soybean_cn_sub)
if (interactive()) {
    shiny::runApp(app)
}

# Below are the same example, only now using the
# SummarizedExperiment (i.e. dataSE) object as input.

# Example: Create interactive scatterplot matrix for first two treatment
# groups of data. When working with the SummarizedExperiment data,
# we can summon the method convertSEPair() to subset our input data
# to only a pair of treatment groups.

\dontrun{
data(se_soybean_cn_sub)
se_soybean_cn_sub <- convertSEPair(se_soybean_cn_sub, "S1", "S2")
app <- plotSMApp(dataSE=se_soybean_cn_sub)
if (interactive()) {
    shiny::runApp(app)
}
}

}
